let i=70
while [ $i -le 90 ]
do
	j=0 
	while [ $j -le $i ]
	do 
		str='\n'
		./it $j $i 2.510 15 1 2.350 2.6 20 2 2.0
		echo $str
		./it $j $i 2.510 15 1 2.350 2.310 25 2 2.150
		echo $str
		./it $j $i 2.310 25 1 2.150 1.910 30 2 2.220
		echo $str
		./it $j $i 1.030 12 1 2.650 0.919 6 2 1.870
		echo $str
		./it $j $i 0.756 10 1 1.9 0.456 25 2 1.8
		echo $str
		./it $j $i 0.756 10 1 1.9 0.151 1 2 2.050
		echo $str
		./it $j $i 0.151 1 1 2.050 0.3 2 2 2.150
		echo $str
		./it $j $i 2.510 15 1 2.350 2.6 20 2 2.0 2.310 25 3 2.150 
		echo $str
		./it $j $i 1.910 30 1 2.220 1.230 06 2 2.5 1.610 08 3 2.350
		echo $str
		./it $j $i 0.756 10 1 1.9 0.456 25 2 1.8 0.5 05 3 2.1
		echo $str
		./it $j $i 2.310 25 1 2.150 1.230 06 2 2.5 1.030 12 3 2.650
		echo $str
		./it $j $i 0.519 8 1 1.870 2.310 25 2 2.150 1.230 06 3 2.5
		echo $str
		./it $j $i 0.756 10 1 1.9 2.510 15 2 2.350 0.5 05 3 2.1
		echo $str
		#FOUR TASK RESULT
		./it $j $i 2.310 25 1 2.150 1.910 30 2 2.220 0.756 10 3 1.9 0.456 25 4 1.8
		#./it $j $i 0.519 8 1 1.870 0.8 12 2 1.870 0.872 5 3 1.9 0.756 10 4 1.9
		./it $j $i 0.456 25 1 1.8 0.5 05 1 2.1 0.151 1 1 2.050 0.3 2 1 2.150
		./it $j $i 1.910 30 1 2.220 1.230 06 2 2.5 1.610 08 3 2.350 1.030 12 4 2.650
		./it $j $i 0.872 5 1 1.9 0.756 10 2 1.9 0.456 25 3 1.8 0.5 05 4 2.1
		#./it $j $i 0.919 6 1 1.870 0.519 8 2 1.870 0.8 12 3 1.870 0.872 5 4 1.9
		./it $j $i 2.310 25 1 2.150 1.910 30 2 2.220 0.919 6 3 1.870 0.3 2 4 2.150 
		#FIVE TASK RESULT
		./it $j $i 2.6 20 1 2.0 2.310 25 2 2.150 1.910 30 3 2.220 1.230 16 4 2.5 1.610 18 5 2.350
		./it $j $i 0.8 12 1 1.870 0.872 5 2 1.9 0.756 10 3 1.9 0.456 25 4 1.8 0.5 15 5 2.1
		./it $j $i 2.310 25 1 2.150 1.910 30 2 2.220 1.230 16 3 2.5 1.610 18 4 2.350 1.030 12 5 2.650
		#./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.151 1 5 2.050
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.3 2 5 2.150
		#SIX TASK RESULT
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.8 12 5 1.870 0.756 10 6 1.9
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.8 12 5 1.870 0.456 25 6 1.8
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.8 12 5 1.870 2.310 25 6 2.150
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.8 12 5 1.870 2.510 15 6 2.350
		#./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.151 1 5 2.050 2.510 15 6 2.350
		#./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.151 1 5 2.050 1.910 30 6 2.220
		#./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.151 1 5 2.050 0.456 25 6 1.8
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.3 2 5 2.150 2.510 15 6 2.350
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.3 2 5 2.150 2.6 20 6 2.0
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.3 2 5 2.150 2.310 25 6 2.150
		#SEVEN TASK RESULT
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.8 12 5 1.870 0.756 10 6 1.9 0.872 5 7 1.9
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.8 12 5 1.870 0.456 25 6 1.8 0.5 15 7 2.1
		./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.8 12 5 1.870 2.310 25 6 2.150 2.6 20 7 2.0
		#./it $j $i 1.610 18 1 2.350 1.030 12 2 2.650 0.919 16 3 1.870 0.519 28 4 1.870 0.8 12 5 1.870 2.510 15 6 2.350 2.6 20 7 2.0
		let j=$( expr $j+10)
	done
	let i=$( expr $i+10)
done